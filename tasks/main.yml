---
# tasks file for jhu-role-wordpress

- name: Ensure WP User exists
  user:
    name: "{{ wordpress_user }}"
    comment: "{{ wordpress_user_name }}"
    shell: /bin/bash

- name: Create directory
  file:
    path: "{{ wordpress_home }}"
    state: directory
    owner: "{{ wordpress_user }}"
    group: "{{ wordpress_user }}"

- name: Install wp-cli.phar from Github
  get_url: url={{ wpcli_phar_url }} dest={{wpcli_bin_location}} mode=0755

- name: Set default ACLs for wordpress user
  acl:
    path: '{{ wordpress_home }}'
    default: yes
    entity: '{{ item.name }}'
    etype: '{{ item.type }}'
    permissions: '{{ item.permissions }}'
    state: present
  with_items:
    - "{{ acls }}"

- name: Set ACLs for wordpress user
  acl:
    path: '{{ wordpress_home }}'
    entity: '{{ item.entity }}'
    etype: '{{ item.etype }}'
    permissions: '{{ item.permissions }}'
    state: present
    default: '{{ item.default }}'
  with_items:
    - "{{ wordpress_acls }}"

- name: Download wordpress using wp-cli into {{ wordpress_home }}
  command: /usr/local/bin/wp core download --path={{wordpress_home}}
  args:
    creates: "{{ wordpress_home }}/index.php"
  register: wordpress_download

- name: Ensure wp-config-sample.php does not exist
  file:
    path: "{{ wordpress_home }}/wp-config-sample.php"
    state: absent

- name: Configure wordpress using the template
  template:
    src: wp-config.php.j2
    dest: "{{ wordpress_home }}/wp-config.php"
    owner: "{{ wordpress_user }}"
    group: "{{ wordpress_user }}"

- name: Run wp core install 
  command: /usr/local/bin/wp core install --url="{{ wordpress_url }}" --title="{{ wordpress_title }}" --admin_user="{{ wordpress_user }}" --admin_email="{{ wordpress_email }}" --path="{{ wordpress_home }}"
  when: wordpress_download.changed

- name: Set mode on {{ wordpress_home }} and recurse
  file:
    path: "{{ wordpress_home }}"
    mode: "g=rwX"
    recurse: yes
  when: wordpress_download.changed

- name: Run wp plugin to install plugins
  command: /usr/local/bin/wp plugin install {{ item }} --path="{{ wordpress_home }}"
  with_items:
    - "{{ wordpress_plugins }}"
  when: wordpress_download.changed

- name: Run wp plugin active on {{ item }}
  command: /usr/local/bin/wp plugin activate {{ item }} --path="{{ wordpress_home }}"
  with_items:
    - "{{ wordpress_plugins }}"
  when: wordpress_download.changed

- name: Run wp user update on admin user to set Password
  command: /usr/local/bin/wp user update 1 --user_pass="{{ wordpress_admin_password }}" --path="{{ wordpress_home }}"
  when: wordpress_download.changed

- debug:
    var: wordpress_download
